# fmt:off
from PIL import Image, ImageSequence
import os
import io
""" 
Required for different library versions
"""
def load_rgb_gif():
    
    img = Image.open(os.path.join(os.path.dirname(os.path.abspath(__file__)), "rgb.gif"))
    frames = ImageSequence.Iterator(img)
    def prepare_frames(frames):
        for frame in frames:
            resized = frame.copy().resize((320, 320))
            yield resized
    frames = prepare_frames(frames)
    img = next(frames)
    img.info = img.info 
    result_bytes = io.BytesIO()
    img.save(
        result_bytes,
        format="GIF",
        interlace=False,
        save_all=True,
        append_images=list(frames),
        loop=0,
    )
    return result_bytes.getvalue()

    





krakenz3_response = {
    "liquid_hid": [[48, 1], [56, 1, 2, 0]],
    "brightness_hid": [[48, 1], [48, 2, 1, 60, 0, 0, 1, 0]],
    "orientation_hid": [[48, 1], [48, 2, 1, 50, 0, 0, 1, 1]],
    "static_hid": [
        [48, 1],
        [54, 3],
        [48, 4, 0],
        [48, 4, 1],
        [48, 4, 2],
        [48, 4, 3],
        [48, 4, 4],
        [48, 4, 5],
        [48, 4, 6],
        [48, 4, 7],
        [48, 4, 8],
        [48, 4, 9],
        [48, 4, 10],
        [48, 4, 11],
        [48, 4, 12],
        [48, 4, 13],
        [48, 4, 14],
        [48, 4, 15],
        [50, 2, 0],
        [50, 1, 0, 1, 0, 0, 145, 1, 1],
        [54, 1, 0],
        [54, 2],
        [56, 1, 4, 0],
    ],
    "gif_hid": [[48,1],
        [54,3],
        [48,4,0],
        [48,4,1],
        [48,4,2],
        [48,4,3],
        [48,4,4],
        [48,4,5],
        [48,4,6],
        [48,4,7],
        [48,4,8],
        [48,4,9],
        [48,4,10],
        [48,4,11],
        [48,4,12],
        [48,4,13],
        [48,4,14],
        [48,4,15],
        [50,2,0],
        [50,1,0,1,0,0,2,0,1],
        [54,1,0],
        [54,2],
        [56,1,4,0]],
    "static_bulk": [
        [18,250,1,232,171,205,239,152,118,84,50,16,2,0,0,0,0,64,6,0],

    "gif_bulk": [
        lambda:  [ 0x12, 0xFA, 0x01, 0xE8, 0xAB, 0xCD, 0xEF, 0x98, 0x76, 0x54, 0x32, 0x10,] + [0x01, 0x0, 0x0, 0x0] + list(len(load_rgb_gif()).to_bytes(4, "little")),
        lambda:  list(load_rgb_gif()[0 * 512: 1 * 512]),
        lambda:  list(load_rgb_gif()[1 * 512: 2 * 512]),
        lambda:  list(load_rgb_gif()[2 * 512: 3 * 512]),
        lambda:  list(load_rgb_gif()[3 * 512: 4 * 512]),
        lambda:  list(load_rgb_gif()[4 * 512: 5 * 512])
    ]
}
